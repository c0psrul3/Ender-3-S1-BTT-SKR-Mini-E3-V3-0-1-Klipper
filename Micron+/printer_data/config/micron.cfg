# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Micron Cfg for BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section



# BTT Octopus MAX EZ
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_1E002B001251313236343430-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_5
##  Endstop connected to EBB36
[stepper_x]
step_pin: PG15
dir_pin: !PB3
enable_pin: !PD5
rotation_distance: 32
microsteps: 32
full_steps_per_rotation:200
position_min: 0
position_endstop: 173
position_max: 173
homing_positive_dir: true
endstop_pin: EBB36:LIMIT_X
homing_retract_dist: 5
homing_speed: 50   #Max 100


[tmc2209 stepper_x]
uart_pin: PG9
interpolate: false
run_current: 0.6
hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_6
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB6
rotation_distance: 32
microsteps: 32
full_steps_per_rotation:200
position_min: -3
position_endstop: 184
position_max: 184
homing_positive_dir: true
endstop_pin: !PC15
homing_retract_dist: 5
homing_speed: 50   #Max 100

[tmc2209 stepper_y]
uart_pin: PG10
interpolate: false
run_current: 0.6
hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0



#####################################################################
#   Z Stepper Settings
#
#   NEMA14 1.8 deg
#   LDO-36STH52-1504AH(VRN)
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_1
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PC13
dir_pin: !PC14
enable_pin: !PE6
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
#endstop_pin: !PF1  ## owl
endstop_pin: probe:z_virtual_endstop    ## NOTE: position_endstop is not valid if endstop_pin=probe
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#endstop_pin: tmc2209_stepper_z:virtual_endstop
#position_endstop: -1.275
position_max: 171
position_min: -10
homing_speed: 18
second_homing_speed: 3
#homing_retract_dist: 3
homing_retract_dist: 0  ## sensorless

[tmc2209 stepper_z]
uart_pin: PG14
diag_pin: ^PF0  ## sensorless
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 175  # 255 is most sensitive value, 0 is least sensitive (180

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_4
[stepper_z1]
step_pin: PB8
dir_pin: PB9
enable_pin: !PB7
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
#endstop_pin: !PF1  ## owl
#endstop_pin: tmc2209_stepper_z1:virtual_endstop

[tmc2209 stepper_z1]
uart_pin: PG11
diag_pin: ^PF3  ## sensorless
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 175

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_3
[stepper_z2]
step_pin: PE1
dir_pin: !PE0
enable_pin: !PE2
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
#endstop_pin: tmc2209_stepper_z2:virtual_endstop

[tmc2209 stepper_z2]
uart_pin: PG12
diag_pin: ^PF4  ## sensorless
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 175

##  Z3 Stepper - Front Right
##  Connected to MOTOR_2
[stepper_z3]
step_pin: PE4
dir_pin: PE5
enable_pin: !PE3
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
#endstop_pin: tmc2209_stepper_z3:virtual_endstop

[tmc2209 stepper_z3]
uart_pin: PG13
diag_pin: ^PF2  ## sensorless
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 175

# Motor-7
#[extruder2]
#step_pin: PD3
#dir_pin: PD2
#enable_pin: !PD4
#heater_pin: PF9 # HE2
#sensor_pin: PC4 # T2
#...

# Motor-8
#[extruder3]
#step_pin: PA10
#dir_pin: PA9
#enable_pin: !PA15
#heater_pin: PF7 # HE3
#sensor_pin: PA7 # T3
#...

# Motor-9
#[extruder4]
#step_pin: PA8
#dir_pin: PC7
#enable_pin: !PC9
#...

# Motor-10
#[extruder5]
#step_pin: PG6
#dir_pin: PC6
#enable_pin: !PC8
#...


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  Heater Pin - BED_OUT - PF5
##  Thermistor - TB - PB1
heater_pin: PF5
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PB1
min_temp: 0
max_temp: 130
max_power: 0.6
#*# control = pid
#*# pid_kp = 58.437
#*# pid_ki = 2.347
#*# pid_kd = 363.769


#####################################################################
#   Fan Control
#####################################################################

## OctopusMAX - VFAN0
#[fan_generic fan0]
#pin: PA6

## OctopusMAX - VFAN1
#[heater_fan hotend_fan1]
###  Hotend Fan - FAN1
#pin: PA5
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
###  If you are experiencing back flow, you can reduce fan_speed
##fan_speed: 1.0

# ## OctopusMAX - VFAN2
# [fan_generic fan2]
# pin: PA4
# max_power: 1.0

## ToqueCAN Temp-Fan (via OctopusMAX:VFAN2-PA4)
[temperature_fan pifan]
pin: PA4
sensor_type: temperature_host
off_below: 0.5
min_temp: 10
max_temp: 90
target_temp: 49.7
control: watermark
min_speed: 0.5
max_speed: 1.0

## OctopusMAX - VFAN3
#[fan_generic fan3]
#pin: PA3

## OctopusMAX - FAN4
[controller_fan NoctuaA6x25FLX]
##  Controller fan - FAN4
pin: PA1
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin: PC3
#tachometer_ppr: 2
#tachometer_poll_interval:
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
heater: heater_bed  # Default: extruder
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.
kick_start_time: 0.5

## OctopusMAX - FAN5 (used by `controller_fan`)
#[heater_fan fan5]
#pin: PF8
#tachometer_pin: PC1

## OctopusMAX - FAN6
#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC2


# # Undercarriage Temp Control Fan
# [temperature_fan my_temp_fan]
# pin: !PC1
# #max_power:
# #shutdown_speed:
# #cycle_time:
# #hardware_pwm:
# #kick_start_time:
# #off_below:
# tachometer_pin: PF8
# tachometer_ppr: 2
# #tachometer_poll_interval:
# #sensor_type:
# #sensor_pin:
# #control:
# #max_delta:
# #min_temp:
# #max_temp:
# #   See the "extruder" section for a description of the above parameters.
# #pid_Kp:
# #pid_Ki:
# #pid_Kd:
# #   The proportional (pid_Kp), integral (pid_Ki), and derivative
# #   (pid_Kd) settings for the PID feedback control system. Klipper
# #   evaluates the PID settings with the following general formula:
# #     fan_pwm = max_power - (Kp*e + Ki*integral(e) - Kd*derivative(e)) / 255
# #   Where "e" is "target_temperature - measured_temperature" and
# #   "fan_pwm" is the requested fan rate with 0.0 being full off and
# #   1.0 being full on. The pid_Kp, pid_Ki, and pid_Kd parameters must
# #   be provided when the PID control algorithm is enabled.
# #pid_deriv_time: 2.0
# #   A time value (in seconds) over which temperature measurements will
# #   be smoothed when using the PID control algorithm. This may reduce
# #   the impact of measurement noise. The default is 2 seconds.
# #target_temp: 40.0
# #   A temperature (in Celsius) that will be the target temperature.
# #   The default is 40 degrees.
# #max_speed: 1.0
# #   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
# #   will be set to when the sensor temperature exceeds the set value.
# #   The default is 1.0.
# #min_speed: 0.3
# #   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
# #   the fan will be set to for PID temperature fans.
# #   The default is 0.3.
# #gcode_id:
# #   If set, the temperature will be reported in M105 queries using the
# #   given id. The default is to not report the temperature via M105.


#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800


## https://www.klipper3d.org/Config_Reference.html#quad_gantry_level
[quad_gantry_level]
##  Gantry Corners for Micron+ Build
gantry_corners:
   0,5
   172,180
#  Probe points
points:
   5,15
   5,170
   165,170
   165,15
#   A newline separated list of four X, Y points that should be probed
#   during a QUAD_GANTRY_LEVEL command. Order of the locations is
#   important, and should correspond to Z, Z1, Z2, and Z3 location in
#   order. This parameter must be provided. For maximum accuracy,
#   ensure your probe offsets are configured.
speed: 100
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 15
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 15
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.0075
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance.
max_adjust: 3.0
#   Safety limit if an adjustment greater than this value is requested
#   quad_gantry_level will abort.



########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # FPC header, Aliases EXP1 & EXP2 for mini12864
    EXP1_1=PG2, EXP1_2=PD15,
    EXP1_3=PD14, EXP1_4=PD13,
    EXP1_5=PD12, EXP1_6=PD11,
    EXP1_7=PD10, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PG5, EXP2_4=PE11,
    EXP2_5=PG4, EXP2_6=PE14,
    EXP2_7=PG3, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>


#--------------------------------------------------------------------

#####################################################################
# Other Octopus MAX configs
#####################################################################

#[bltouch]
#sensor_pin: PB15
#control_pin: PB14

# Proximity switch
#[probe]
#pin: PF11

#[output_pin ps_on_pin]
#pin: PF13

#[output_pin pf12_pin]
#pin: PF12

[neopixel max_neopixel_1]
pin: PE10
chain_count: 1
initial_RED: 0.3
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: GRB

## TODO: nozzle wiper to replace neopixel2 (PE9)
[neopixel max_neopixel_2]
pin: PE9
chain_count: 1
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: GRB


#[hall_filament_width_sensor]
#adc1: PC0
#adc2: PF10

#[adxl345]
#cs_pin: PF14
#spi_bus: spi4


## PT1000 sensor for heated bed
[temperature_sensor bed_pt1000]
sensor_type: PT1000
sensor_pin: PA7
pullup_resistor: 2200
#min_temp:
#max_temp: 300
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.

### Electronics bay sensor
#[temperature_sensor chamber]
#sensor_type: SHT21
#i2c_mcu: mcu
#i2c_bus: i2c.1
#htu21d_resolution: TEMP14_HUM12
#htu21d_report_time: 5


#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro SENSORLESS_HOME_Z]
gcode:
    {% set HOME_CUR = 0.600 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}

