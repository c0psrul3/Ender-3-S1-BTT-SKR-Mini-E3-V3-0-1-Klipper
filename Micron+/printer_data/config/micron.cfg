# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Micron Cfg for BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section



# BTT Octopus MAX EZ
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_1E002B001251313236343430-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_5
##  Endstop connected to EBB36
[stepper_x]
step_pin: PG15
dir_pin: PB3
enable_pin: !PD5
rotation_distance: 32
microsteps: 32
full_steps_per_rotation:200  
position_min: 0
position_endstop: 180
position_max: 180
homing_positive_dir: true
endstop_pin: EBB36:LIMIT_3
homing_retract_dist: 5
homing_speed: 50   #Max 100 


[tmc2209 stepper_x]
uart_pin: PG9
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_6
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB6
rotation_distance: 32
microsteps: 32
full_steps_per_rotation:200 
position_min: 0
position_endstop: 190
position_max: 190
homing_positive_dir: true
endstop_pin: !PF4
homing_retract_dist: 5
homing_speed: 50   #Max 100 

[tmc2209 stepper_y]
uart_pin: PG10
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

 
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_1
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PC13
dir_pin: PC14
enable_pin: !PE6
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
endstop_pin: !PF2
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.5
position_max: 165
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PG14
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_4
[stepper_z1]
step_pin: PB8
dir_pin: PB9
enable_pin: PB7
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PG11
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_3
[stepper_z2]
step_pin: PE1
dir_pin: PE0
enable_pin: !PE2
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PG12
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_2
[stepper_z3]
step_pin: PE4
dir_pin: PE5
enable_pin: !PE3
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PG13
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

# Motor-7
#[extruder2]
#step_pin: PD3
#dir_pin: PD2
#enable_pin: !PD4
#heater_pin: PF9 # HE2
#sensor_pin: PC4 # T2
#...

# Motor-8
#[extruder3]
#step_pin: PA10
#dir_pin: PA9
#enable_pin: !PA15
#heater_pin: PF7 # HE3
#sensor_pin: PA7 # T3
#...

# Motor-9
#[extruder4]
#step_pin: PA8
#dir_pin: PC7
#enable_pin: !PC9
#...

# Motor-10
#[extruder5]
#step_pin: PG6
#dir_pin: PC6
#enable_pin: !PC8
#...


#####################################################################
#   Extruder
#####################################################################

##  Connected to EBB36
##  Heater - EBB36 / HE0
##  Thermistor - EBB36 / T0
[extruder]
step_pin: EBB36:EXT_STEP
dir_pin: !EBB36:EXT_DIR
enable_pin: !EBB36:EXT_EN
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
gear_ratio: 50:10              #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBB36:HE0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBB36:TH0
# sensor_type:MAX31865
# sensor_pin: EBB36: PA4
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBB36:EXT_UART
interpolate: false
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  Heater Pin - BED_OUT - PF5
##  Thermistor - TB - PB1
heater_pin: PF5
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PB1
control: watermark
#control = pid
#pid_kp = 58.437
#pid_ki = 2.347
#pid_kd = 363.769
min_temp: 0
max_temp: 130
max_power: 0.6

#####################################################################
#   Probe
#####################################################################

[probe]
##  Klicky Probe - Since this is just an endstop switch its wired up to one of the endstop ports
pin: !EBB36:LIMIT_1
x_offset: 0
y_offset: 26.0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
#   Fan Control
#####################################################################
## Octopus Fan
#[generic_fan fan0]
#pin: PA6

#[generic_fan fan1]
#pin: PA5

#[heater_fan fan2]
#pin: PA4

#[heater_fan fan3]
#pin: PA3

## used by `temperature_fan`
#[heater_fan fan4]
#pin: PA1
#tachometer_pin: PC3

## used by `controller_fan`
#[heater_fan fan5]
#pin: PF8
#tachometer_pin: PC1

#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC2


#[heater_fan hotend_fan]
###  Hotend Fan - FAN1
#pin: 
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
###  If you are experiencing back flow, you can reduce fan_speed
##fan_speed: 1.0

[controller_fan NoctuaA6x25FLX]
##  Controller fan - FAN2
pin: PC3
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin: PA1
#tachometer_ppr: 2
#tachometer_poll_interval:
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
heater: heater_bed  # Default: extruder
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.
kick_start_time: 0.5

# # Undercarriage Temp Control Fan
# [temperature_fan my_temp_fan]
# pin: !PC1
# #max_power:
# #shutdown_speed:
# #cycle_time:
# #hardware_pwm:
# #kick_start_time:
# #off_below:
# tachometer_pin: PF8
# tachometer_ppr: 2
# #tachometer_poll_interval:
# #sensor_type:
# #sensor_pin:
# #control:
# #max_delta:
# #min_temp:
# #max_temp:
# #   See the "extruder" section for a description of the above parameters.
# #pid_Kp:
# #pid_Ki:
# #pid_Kd:
# #   The proportional (pid_Kp), integral (pid_Ki), and derivative
# #   (pid_Kd) settings for the PID feedback control system. Klipper
# #   evaluates the PID settings with the following general formula:
# #     fan_pwm = max_power - (Kp*e + Ki*integral(e) - Kd*derivative(e)) / 255
# #   Where "e" is "target_temperature - measured_temperature" and
# #   "fan_pwm" is the requested fan rate with 0.0 being full off and
# #   1.0 being full on. The pid_Kp, pid_Ki, and pid_Kd parameters must
# #   be provided when the PID control algorithm is enabled.
# #pid_deriv_time: 2.0
# #   A time value (in seconds) over which temperature measurements will
# #   be smoothed when using the PID control algorithm. This may reduce
# #   the impact of measurement noise. The default is 2 seconds.
# #target_temp: 40.0
# #   A temperature (in Celsius) that will be the target temperature.
# #   The default is 40 degrees.
# #max_speed: 1.0
# #   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
# #   will be set to when the sensor temperature exceeds the set value.
# #   The default is 1.0.
# #min_speed: 0.3
# #   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
# #   the fan will be set to for PID temperature fans.
# #   The default is 0.3.
# #gcode_id:
# #   If set, the temperature will be reported in M105 queries using the
# #   given id. The default is to not report the temperature via M105.


#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800


[quad_gantry_level]
##  Gantry Corners for Micron+ Build
gantry_corners:
   -60.2,-10.4
   244.1,234.5
#  Probe points
points:
   2,2
   2,150
   170,150
   170,2
speed: 100
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # FPC header, Aliases EXP1 & EXP2 for mini12864
    EXP1_1=PG2, EXP1_2=PD15,
    EXP1_3=PD14, EXP1_4=PD13,
    EXP1_5=PD12, EXP1_6=PD11,
    EXP1_7=PD10, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PG5, EXP2_4=PE11,
    EXP2_5=PG4, EXP2_6=PE14,
    EXP2_7=PG3, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>


#####################################################################
# Displays
#     BigTreeTech mini12864 (with neopixel backlight leds)
######################################################################
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2
[output_pin beeper]
pin: EXP1_1

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

#####################################################################
# Other Octopus MAX configs
#####################################################################

#[bltouch]
#sensor_pin: PB15
#control_pin: PB14

# Proximity switch
#[probe]
#pin: PF11

#[output_pin ps_on_pin]
#pin: PF13

#[output_pin pf12_pin]
#pin: PF12

[neopixel max_neopixel_1]
pin: PE10

#[neopixel max_neopixel_2]
#pin: PE9

#[hall_filament_width_sensor]
#adc1: PC0
#adc2: PF10

#[adxl345]
#cs_pin: PF14
#spi_bus: spi4

#####################################################################
#   Mesh Bed Leveling
#####################################################################

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 8,17
mesh_max: 180,180
probe_count: 8,8
algorithm: bicubic
#relative_reference_index: 0
move_check_distance: 3
split_delta_z: .01


#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

