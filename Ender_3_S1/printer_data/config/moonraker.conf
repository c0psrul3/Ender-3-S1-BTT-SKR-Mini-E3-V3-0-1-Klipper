[server]
host: 0.0.0.0
port: 7125
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True

[authorization]
force_logins: true
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
trusted_clients:
    127.0.0.1
    10.57.90.0/23
    10.57.90.190/32
    10.57.90.72/32
    10.57.90.112/32
    10.57.91.63/32
    10.0.112.0/24
    172.16.125.112/32
    172.16.125.111/32
    127.0.0.0/8
    169.254.0.0/16
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

### moonraker-timelapse
### Don't forget to include timelapse.cfg to your printer.cfg
### Uncomment to enable moonraker-timelapse

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

##   Following basic configuration is default to most images and don't need
##   to be changed in most scenarios. Only uncomment and change it if your
##   Image differ from standart installations. In most common scenarios 
##   a User only need [timelapse] in their configuration.
[timelapse]
##   Directory where the generated video will be saved
output_path: ~/timelapse/
##   Directory where the generated video will be saved
frame_path: /tmp/timelapse/
##   Directory where ffmpeg is installed
ffmpeg_binary_path: /usr/bin/ffmpeg
enabled: True
#mode: layermacro
mode: hyperlapse
snapshoturl: http://localhost:8080/?action=snapshot   # cam: "main"
#snapshoturl: http://localhost:8082/?action=snapshot  # cam: "x-axis"
#gcode_verbose: True
parkhead: False
parkpos: back_right
#park_custom_pos_x: 0.0
#park_custom_pos_y: 0.0
#park_custom_pos_dz: 0.0
#park_travel_speed: 100
#park_retract_speed: 15
#park_extrude_speed: 15
#park_retract_distance: 1.0
#park_extrude_distance: 1.0
hyperlapse_cycle: 30
autorender: True
#constant_rate_factor: 23
#output_framerate: 30
#pixelformat: yuv420p
#time_format_code: %Y%m%d_%H%M
#extraoutputparams: 
#variable_fps: False
#targetlength: 10
#variable_fps_min: 5
#variable_fps_max: 60
#flip_x: False
#flip_y: False
#duplicatelastframe: 0
previewimage: True
#saveframes: False
#wget_skip_cert_check: False



# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/install.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

[update_manager fluidd-config]
type: git_repo
primary_branch: master
path: ~/fluidd-config
origin: https://github.com/fluidd-core/fluidd-config.git
managed_services: klipper

[update_manager fluidd]
type: web
channel: stable
repo: fluidd-core/fluidd
path: ~/fluidd

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

[update_manager Klipper-Adaptive-Meshing-Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main

[update_manager mobileraker]
type: git_repo
path: ~/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
virtualenv: ~/mobileraker-env
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install.sh

[update_manager klipper-macros.kaivalagi]
type: git_repo
path: ~/klipper-macros.kaivalagi
origin: https://github.com/kaivalagi/klipper-macros
primary_branch: main
managed_services: klipper
is_system_service: False

[update_manager klipper-macros.jschuh]
type: git_repo
path: ~/klipper-macros.jschuh
origin: https://github.com/jschuh/klipper-macros
primary_branch: main
managed_services: klipper
is_system_service: False

[update_manager beacon]
type: git_repo
channel: dev
path: ~/beacon_klipper
origin: https://github.com/beacon3d/beacon_klipper.git
env: ~/klippy-env/bin/python
requirements: requirements.txt
install_script: install.sh
is_system_service: False
managed_services: klipper
info_tags:
  desc=Beacon Surface Scanner


# [WLED]()
#
[wled overhead]
type: http
address: 10.57.91.32
#address: 10.57.90.102
initial_preset: 1
#initial_red:
#initial_green:
#initial_blue:
#initial_white:
chain_count: 29
#   Number of addressable neopixels for use (default: 1)


#[webcam webcam]
#location: printer
##   A description of the webcam location, ie: what the webcam is observing.
##   The default is "printer".
#icon: printer
##   A name of the icon to use for the camera.  The default is mdiWebcam.
#enabled: True
##   An optional boolean value to indicate if this webcam should be enabled.
##   Default is True.
#service: mjpegstreamer
##   The name of the application or service hosting the webcam stream.  Front-
##   ends may use this configuration to determine how to launch or start the
##   program.  The default is "mjpegstreamer".
#target_fps: 15
##   An integer value specifying the target framerate.  The default is 15 fps.
#target_fps_idle: 5
##   An integer value specifying the target framerate when the printer is idle.
##   The default is 5 fps.
#stream_url: /webcam/?action=stream
##   The url for the camera stream request.  This may be a full url or a
##   relative path (ie: /webcam?action=stream) if the stream is served on the
##   same host as Moonraker at port 80.  This parameter must be provided.
#snapshot_url: /webcam/?action=snapshot
##   The url for the camera snapshot request.  This may be a full url or a
##   relative path (ie: /webcam?action=stream) if the stream is served on the
##   same host as Moonraker at port 80.  The default is an empty url.
#flip_horizontal: False
##   A boolean value indicating whether the stream should be flipped
##   horizontally.  The default is false.
#flip_vertical: False
##   A boolean value indicating whether the stream should be flipped
##   vertically.  The default is false.
#rotation: 0
##   An integer value indicating the amount of clockwise rotation to apply
##   to the stream.  May be 0, 90, 180, or 270.  The default is 0.
#aspect_ratio: 4:3
##   The aspect ratio to display for the camera.  Note that this option
##   is specific to certain services, otherwise it is ignored.
##   The default is 4:3.

#[wled stealthburner]
#type: serial
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#initial_white: 0.6
#chain_count: 3

#
# [Include Directives](https://moonraker.readthedocs.io/en/latest/configuration/#include-directives)
#
#[include mqtt.conf
#[include button.conf]
#[include notifier.conf]
[include power.conf]


# vim: set ft=cfg ts=0 sts=0 sw=2 et nofen :
